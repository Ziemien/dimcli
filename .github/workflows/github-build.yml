name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-windows:
    strategy:
      matrix:
        image: [windows-2019]
        platform: [Win32, x64]
        configuration: [Debug, Release]
        toolset: [v140, v141, v142]
    runs-on: ${{matrix.image}}
    defaults:
      run:
        shell: cmd
    steps:
    - uses: actions/checkout@v2

    - name: Build
      working-directory: ${{github.workspace}}
      run: |
        md build
        cd build
        cmake .. -G "Visual Studio 16 2019" -A ${{matrix.platform}} -T ${{matrix.toolset}}
        cmake . -DCMAKE_BUILD_TYPE=${{matrix.configuration}} -DCMAKE_INSTALL_PREFIX=publish -DINSTALL_LIBS:BOOL=ON
        cmake --build . --target install --config ${{matrix.configuration}}
        cd publish
        :: 7z a dimcli-latest.zip include lib

    - name: Test
      working-directory: ${{github.workspace}}
      run: '"bin/cli" --test'

  build-ubuntu:
    strategy:
      matrix:
        image: [ubuntu-20.04]
        configuration: [Debug, Release]
        env:
          - CXX=g++-9 CC=gcc-9 BUILD_COVERAGE=ON
#          - CXX=clang++6.0 CC=clang-6.0 INSTALL_LLVM=6.0
          - CXX=clang++9 CC=clang-9 INSTALL_LLVM=9
          - CXX=clang++-10 CC=clang-10
          - CXX=clang++-11 CC=clang-11
          - CXX=g++-7 CC=gcc-7 INSTALL_GCC=7
          - CXX=g++-10 CC=gcc-10
          - CXX=g++-11 CC=gcc-11 INSTALL_GCC=11
    runs-on: ${{matrix.image}}
    steps:
    - uses: actions/checkout@v2

    - name: Build
      working-directory: ${{github.workspace}}
      run: |
        export ${{matrix.env}}
        if [ -n "$INSTALL_LLVM" ]; then
            wget https://apt.llvm.org/llvm.sh
            chmod +x llvm.sh
            sudo ./llvm.sh $INSTALL_LLVM
        elif [ -n "$INSTALL_GCC" ]; then
            sudo apt-get update
            sudo apt-get install -y ${CC} ${CXX}
        fi
        mkdir -p build && cd build
        cmake .. -DBUILD_COVERAGE:BOOL=${BUILD_COVERAGE}
        cmake --build . --config ${{matrix.configuration}}

    - name: Test
      working-directory: ${{github.workspace}}
      run: |
        export LANG=en_US.UTF-8
        bin/cli --test
        if [ "$BUILD_COVERAGE" = "ON" ]; then
            bash <(curl -s https://codecov.io/bash)
        fi
